<?php

    static function WriteVhostConfigFile() {
        global $zdbh;
        global $controller;
        $currentuser = ctrl_users::GetUserDetail();

        $line = "################################################################" 			. fs_filehandler::NewLine();
        $line .= "# Apache VHOST configuration file" 		                      			. fs_filehandler::NewLine();
        $line .= "# Automatically generated by ZPanel " . sys_versions::ShowZpanelVersion() . fs_filehandler::NewLine();
        $line .= "################################################################" 		. fs_filehandler::NewLine();
        $line .= "" 																		. fs_filehandler::NewLine();

        // ZPanel default virtual host container
        $line .= "NameVirtualHost *:" . self::GetVHOption('apache_port') . "" 				. fs_filehandler::NewLine();
        $line .= "" 																		. fs_filehandler::NewLine();
        $line .= "# Configuration for ZPanel control panel." 								. fs_filehandler::NewLine();
        $line .= "<VirtualHost localhost:" . self::GetVHOption('apache_port') . ">" 		. fs_filehandler::NewLine();
        $line .= "ServerAdmin zadmin@ztest.com" . fs_filehandler::NewLine();
        $line .= "DocumentRoot \"" . ctrl_options::GetOption('zpanel_root') . "\"" 			. fs_filehandler::NewLine();
        $line .= "ServerName " . ctrl_options::GetOption('zpanel_domain') . "" 				. fs_filehandler::NewLine();
        $line .= "ServerAlias *." . ctrl_options::GetOption('zpanel_domain') . "" 			. fs_filehandler::NewLine();
        $line .= "<Location /server-status>" 												. fs_filehandler::NewLine();
        $line .= "	SetHandler server-status" 												. fs_filehandler::NewLine();
        $line .= "	Order Deny,Allow" 														. fs_filehandler::NewLine();
        $line .= "	Allow from all" 														. fs_filehandler::NewLine();
        $line .= "</Location>" 																. fs_filehandler::NewLine();
        $line .= "AddType application/x-httpd-php .php" 									. fs_filehandler::NewLine();
        $line .= "<Directory \"" . ctrl_options::GetOption('zpanel_root') . "\">" 			. fs_filehandler::NewLine();
        $line .= "Options FollowSymLinks" 													. fs_filehandler::NewLine();
        $line .= "	AllowOverride All" 														. fs_filehandler::NewLine();
        $line .= "	Order allow,deny" 														. fs_filehandler::NewLine();
        $line .= "	Allow from all" 														. fs_filehandler::NewLine();
        $line .= "</Directory>" 															. fs_filehandler::NewLine();
        $line .= "" 																		. fs_filehandler::NewLine();
        $line .= "# Custom settings are loaded below this line (if any exist)" 				. fs_filehandler::NewLine();

        // Global custom zpanel entry
        $line .= self::GetVHOption('global_zpcustom');

        $line .= "</VirtualHost>" 															. fs_filehandler::NewLine();

        $line .= "" . fs_filehandler::NewLine();
        $line .= "################################################################" 		. fs_filehandler::NewLine();
        $line .= "# ZPanel generated VHOST configurations below....."		 				. fs_filehandler::NewLine();
        $line .= "################################################################" 		. fs_filehandler::NewLine();
        $line .= "" 																		. fs_filehandler::NewLine();

        // Zpanel virtual host container configuration
        $sql = $zdbh->prepare("SELECT * FROM x_vhosts WHERE vh_deleted_ts IS NULL");
        $sql->execute();
        while ($rowvhost = $sql->fetch()) {
            //Domain is enabled
            if ($rowvhost['vh_enabled_in'] == 1) {

                // Get account username vhost is create with
                $username = $zdbh->query("SELECT ac_user_vc FROM x_accounts where ac_id_pk=" . $rowvhost['vh_acc_fk'] . "")->fetch();

                $line .= "# DOMAIN: " . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "<virtualhost *:" . self::GetVHOption('apache_port') . ">" . fs_filehandler::NewLine();

                // Bandwidth Settings
                //$line .= "Include C:/ZPanel/bin/apache/conf/mod_bw/mod_bw/mod_bw_Administration.conf" . fs_filehandler::NewLine();
                // Server name, alias, email settings
                $line .= "ServerName " . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "ServerAlias " . $rowvhost['vh_name_vc'] . " www." . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "ServerAdmin postmaster@txt-clan.com" . fs_filehandler::NewLine();

                // Document root
                $line .= "DocumentRoot \"" . self::GetVHOption('hosted_dir') . $username['ac_user_vc'] . $rowvhost['vh_directory_vc'] . "\"" . fs_filehandler::NewLine();

                // Get Package openbasedir and suhosin enabled options
                if (self::GetVHOption('use_openbase') == "true") {
                    if ($rowvhost['vh_obasedir_in'] <> 0) {
                        $line .= "php_admin_value open_basedir \"" . self::GetVHOption('hosted_dir') . $username['ac_user_vc'] . $rowvhost['vh_directory_vc'] . self::GetVHOption('openbase_seperator') . self::GetVHOption('openbase_temp') . "\"" . fs_filehandler::NewLine();
                    }
                }
                if (self::GetVHOption('use_suhosin') == "true") {
                    if ($rowvhost['vh_suhosin_in'] <> 0) {
                        $line .= self::GetVHOption('suhosin_value') . fs_filehandler::NewLine();
                    }
                }
                // Logs
                $line .= "ErrorLog \"" . ctrl_options::GetOption('log_dir') . "domains/" . $username['ac_user_vc'] . "/" . $rowvhost['vh_name_vc'] . "-error.log\" " . fs_filehandler::NewLine();
                $line .= "CustomLog \"" . ctrl_options::GetOption('log_dir') . "domains/" . $username['ac_user_vc'] . "/" . $rowvhost['vh_name_vc'] . "-access.log\" " . self::GetVHOption('access_log_format') . fs_filehandler::NewLine();
                $line .= "CustomLog \"" . ctrl_options::GetOption('log_dir') . "domains/" . $username['ac_user_vc'] . "/" . $rowvhost['vh_name_vc'] . "-bandwidth.log\" " . self::GetVHOption('bandwidth_log_format') . fs_filehandler::NewLine();

                // Directory options
                $line .= "<Directory />" 					. fs_filehandler::NewLine();
                $line .= "Options FollowSymLinks Indexes" 	. fs_filehandler::NewLine();
                $line .= "AllowOverride All" 				. fs_filehandler::NewLine();
                $line .= "Order Allow,Deny" 				. fs_filehandler::NewLine();
                $line .= "Allow from all" 					. fs_filehandler::NewLine();
                $line .= "</Directory>" 					. fs_filehandler::NewLine();

                // Get Package php and cgi enabled options
                $rows = $zdbh->prepare("SELECT * FROM x_packages WHERE pk_reseller_fk=" . $rowvhost['vh_acc_fk'] . " AND pk_deleted_ts IS NULL");
                $rows->execute();
                $dbvals = $rows->fetch();
                if ($dbvals['pk_enablephp_in'] <> 0) {
                    $line .= self::GetVHOption('php_handler') . fs_filehandler::NewLine();
                }
                if ($dbvals['pk_enablecgi_in'] <> 0) {
                    $line .= self::GetVHOption('cgi_handler') . fs_filehandler::NewLine();
                }

                // Error documents:- Error pages are added automatically if they are found in the _errorpages directory
                // and if they are a valid error code, and saved in the proper format, i.e. <error_number>.html
                $errorpages = self::GetVHOption('hosted_dir') . $username['ac_user_vc'] . $rowvhost['vh_directory_vc'] . "/_errorpages";
                if (is_dir($errorpages)) {
                    if ($handle = opendir($errorpages)) {
                        while (($file = readdir($handle)) !== false) {
                            if ($file != "." && $file != "..") {
                                $page = explode(".", $file);
                                if (!fs_director::CheckForEmptyValue(self::CheckErrorDocument($page[0]))) {
                                    $line .= "ErrorDocument " . $page[0] . " /_errorpages/" . $page[0] . ".html" . fs_filehandler::NewLine();
                                }
                            }
                        }
                        closedir($handle);
                    }
                }

                // Directory indexes
                $line .= self::GetVHOption('dir_index') . fs_filehandler::NewLine();

                // Global custom global vh entry
                $line .= "# Custom Global Settings" . fs_filehandler::NewLine();
                $line .= self::GetVHOption('global_vhcustom') . fs_filehandler::NewLine();

                // Client custom vh entry
                $line .= "# Custom VH settings" . fs_filehandler::NewLine();
                $line .= $rowvhost['vh_custom_tx'] . fs_filehandler::NewLine();

                // End Virtual Host Settings
                $line .= "</virtualhost>" . fs_filehandler::NewLine();
                $line .= "# END DOMAIN: " . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "################################################################" . fs_filehandler::NewLine();
            } else {
                //Domain is NOT enabled
                $line .= "# DOMAIN: " . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "# THIS DOMAIN HAS BEEN DISABLED" . fs_filehandler::NewLine();
                $line .= "<virtualhost *:" . self::GetVHOption('apache_port') . ">" . fs_filehandler::NewLine();
                // Server name, alias, email settings
                $line .= "ServerName " . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "ServerAlias " . $rowvhost['vh_name_vc'] . " www." . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "ServerAdmin postmaster@txt-clan.com" . fs_filehandler::NewLine();
                // Document root
                $line .= "DocumentRoot \"" . self::GetVHOption('static_dir') . "disabled\"" . fs_filehandler::NewLine();
                // Directory options
                $line .= "<Directory />" . fs_filehandler::NewLine();
                $line .= "Options FollowSymLinks Indexes" . fs_filehandler::NewLine();
                $line .= "AllowOverride All" . fs_filehandler::NewLine();
                $line .= "Order Allow,Deny" . fs_filehandler::NewLine();
                $line .= "Allow from all" . fs_filehandler::NewLine();
                $line .= "</Directory>" . fs_filehandler::NewLine();
                $line .= self::GetVHOption('dir_index') . fs_filehandler::NewLine();
                $line .= "</virtualhost>" . fs_filehandler::NewLine();
                $line .= "# END DOMAIN: " . $rowvhost['vh_name_vc'] . fs_filehandler::NewLine();
                $line .= "################################################################" . fs_filehandler::NewLine();
            }
        }
        // write the vhost config file
        $vhconfigfile = self::GetVHOption('apache_vhost');
        if (fs_filehandler::UpdateFile($vhconfigfile, 0777, $line)) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    static function CheckErrorDocument($error) {
        $errordocs = array(100, 101, 102, 200, 201, 202, 203, 204, 205, 206, 207,
				           300, 301, 302, 303, 304, 305, 306, 307, 400, 401, 402,
				           403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
				           414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
				           425, 426, 500, 501, 502, 503, 504, 505, 506, 507, 508,
				           509, 510);
        if (in_array($error, $errordocs)) {
            return true;
        } else {
            return false;
        }
    }

    static function IsValidDomainName($a) {
        if (stristr($a, '.')) {
            $part = explode(".", $a);
            foreach ($part as $check) {
                if (!preg_match('/^[a-z\d][a-z\d-]{0,62}$/i', $check) || preg_match('/-$/', $check)) {
                    return false;
                }
            }
        } else {
            return false;
        }
        return true;
    }

    static function IsValidEmail($email) {
        if (!preg_match('/^[a-z0-9]+([_\\.-][a-z0-9]+)*@([a-z0-9]+([\.-][a-z0-9]+)*)+\\.[a-z]{2,}$/i', $email)) {
            return false;
        }
        return true;
    }