#!/usr/bin/php
<?php
/**
 * ZPPY - The ZPanel Package Manager Tool.
 * @package zpanelx
 * @subpackage core -> zppy client
 * @author Bobby Allen (ballen@zpanelcp.com)
 * @copyright ZPanel Project (http://www.zpanelcp.com/)
 * @link http://www.zpanelcp.com/
 * @license GPL (http://www.gnu.org/licenses/gpl.html)
 */
$raw_path = str_replace("\\", "/", dirname(__FILE__));
$root_path = str_replace("/bin", "/", $raw_path);
chdir($root_path);

set_time_limit(0);
ini_set('memory_limit', '256M');
ini_set('error_reporting', E_ALL | E_STRICT);
ini_set('display_errors', 'On');
ini_set('log_errors', 'Off');

require_once 'dryden/loader.inc.php';
require_once 'cnf/db.php';
require_once 'inc/dbc.inc.php';

if (!runtime_controller::IsCLI())
    exit;


if ((isset($argv[1])) && ($argv[1] == 'install')) {
    fwrite(STDOUT, "Module to be installed " . $argv[2] . "\n");
    $zip = new ZipArchive;
    $res = $zip->open("/tmp/" . $argv[2] . ".zip");
    if ($res) {
        $zip->extractTo("/tmp/");
        $zip->close();
        fwrite(STDOUT, "Module extracted successfully!");
    } else {
        fwrite(STDOUT, "Module failed to be extracted!");
    }
    exit;
}


if ((isset($argv[1])) && ($argv[1] == 'upgrade')) {
    fwrite(STDOUT, "Module to be upgraded!\n");

    exit;
}


if ((isset($argv[1])) && ($argv[1] == 'remove')) {
    if (fs_director::CheckFolderExists('modules/' . $argv[2])) {
        fwrite(STDOUT, "Removing \"" . $argv[2] . "\" will delete the module folder and drop any tables used by the module!\n");
        fwrite(STDOUT, "Please confirm you want to remove this module? [y/N]");
        $confirm = fgets(STDIN, 2);
        if ($confirm == 'y') {
            fwrite(STDOUT, "Deleting " . $argv[2] . " modules files..\n");
            // Lets delete the actual module files and the module folder itself.
            // Lets clean up the module group permissions too... Lets drop them all!
            // Lets drop any system options from the system options table that are related to this module!
            // Lets drop the module from the modules table
        } else {
            fwrite(STDOUT, "Cancelled module removal!\n");
        }
    } else {
        fwrite(STDOUT, "The module '" . $argv[2] . "' doesn't appear to be installed!\n");
    }
    exit;
}


if ((isset($argv[1])) && (($argv[1] == 'version') || ($argv[1] == '-v') || ($argv[1] == '--version'))) {
    fwrite(STDOUT, ctrl_options::GetOption('dbversion') . "\n");

    exit;
}


if ((!isset($argv[1])) || ($argv[1] == 'help') || ($argv[1] == '-h') || ($argv[1] == '--help')) {
    fwrite(STDOUT, "\nZPanel Package Manager\n");
    fwrite(STDOUT, "Copyright (c) 2008 - 2012 ZPanel Project\n");
    fwrite(STDOUT, "http://www.zpanelcp.com/\n");
    fwrite(STDOUT, "Usage: zppy [action] [modulename]\n");
    fwrite(STDOUT, "Actions:\n");
    fwrite(STDOUT, "  install [modulename]- Install a named module.\n");
    fwrite(STDOUT, "  upgrade [modulename]- Updates a named module.\n");
    fwrite(STDOUT, "  remove [modulename]- Remove a named module.\n");
    fwrite(STDOUT, "  --version - Displays the Zpanel version\n");
    fwrite(STDOUT, "  --help - Displays this text.\n\n");
}

if (isset($argv[1])) {
    fwrite(STDOUT, "Unknown action \"" . $argv[1] . "\" check syntax with: zppy --help\n");
}
exit;
?>